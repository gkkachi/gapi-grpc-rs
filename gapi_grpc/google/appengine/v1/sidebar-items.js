initSidebarItems({"enum":[["AuthFailAction","Actions to take when the user is not logged in."],["InboundServiceType","Available inbound services."],["LoginRequirement","Methods to restrict access to a URL based on login status."],["SecurityLevel","Methods to enforce security (HTTPS) on a URL."],["ServingStatus","Run states of a version."],["VersionView","Fields that should be returned when [Version][google.appengine.v1.Version] resources are retreived."]],"mod":[["applications_client","Generated client implementations."],["audit_data",""],["error_handler",""],["instance",""],["instances_client","Generated client implementations."],["services_client","Generated client implementations."],["traffic_split",""],["url_map",""],["version",""],["versions_client","Generated client implementations."]],"struct":[["ApiConfigHandler","Google Cloud Endpoints configuration for API handlers."],["ApiEndpointHandler","Uses Google Cloud Endpoints to handle requests."],["Application","An Application resource contains the top-level configuration of an App Engine application."],["AuditData","App Engine admin service audit log."],["AutomaticScaling","Automatic scaling is based on request rate, response latencies, and other application metrics."],["BasicScaling","A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity."],["ContainerInfo","Docker image that is used to start a VM container for the version you deploy."],["CpuUtilization","Target scaling by CPU usage."],["CreateVersionMethod","Detailed information about CreateVersion call."],["CreateVersionRequest","Request message for `Versions.CreateVersion`."],["DebugInstanceRequest","Request message for `Instances.DebugInstance`."],["DeleteInstanceRequest","Request message for `Instances.DeleteInstance`."],["DeleteServiceRequest","Request message for `Services.DeleteService`."],["DeleteVersionRequest","Request message for `Versions.DeleteVersion`."],["Deployment","Code and application artifacts used to deploy a version to App Engine."],["DiskUtilization","Target scaling by disk usage. Only applicable for VM runtimes."],["ErrorHandler","Custom static error page to be served when an error occurs."],["FileInfo","Single source file that is part of the version to be deployed. Each source file that is deployed must be specified separately."],["GetApplicationRequest","Request message for `Applications.GetApplication`."],["GetInstanceRequest","Request message for `Instances.GetInstance`."],["GetServiceRequest","Request message for `Services.GetService`."],["GetVersionRequest","Request message for `Versions.GetVersion`."],["HealthCheck","Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment."],["Instance","An Instance resource is the computing unit that App Engine uses to automatically scale an application."],["Library","Third-party Python runtime library that is required by the application."],["ListInstancesRequest","Request message for `Instances.ListInstances`."],["ListInstancesResponse","Response message for `Instances.ListInstances`."],["ListServicesRequest","Request message for `Services.ListServices`."],["ListServicesResponse","Response message for `Services.ListServices`."],["ListVersionsRequest","Request message for `Versions.ListVersions`."],["ListVersionsResponse","Response message for `Versions.ListVersions`."],["LocationMetadata","Metadata for the given [google.cloud.location.Location][google.cloud.location.Location]."],["ManualScaling","A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time."],["Network","Extra network settings. Only applicable for VM runtimes."],["NetworkUtilization","Target scaling by network usage. Only applicable for VM runtimes."],["OperationMetadataV1","Metadata for the given [google.longrunning.Operation][google.longrunning.Operation]."],["RepairApplicationRequest","Request message for 'Applications.RepairApplication'."],["RequestUtilization","Target scaling by request utilization. Only applicable for VM runtimes."],["Resources","Machine resources for a version."],["ScriptHandler","Executes a script to handle the request that matches the URL pattern."],["Service","A Service resource is a logical component of an application that can share state and communicate in a secure fashion with other services. For example, an application that handles customer requests might include separate services to handle tasks such as backend data analysis or API requests from mobile devices. Each service has a collection of versions that define a specific set of code used to implement the functionality of that service."],["StaticFilesHandler","Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them."],["TrafficSplit","Traffic routing configuration for versions within a single service. Traffic splits define how traffic directed to the service is assigned to versions."],["UpdateServiceMethod","Detailed information about UpdateService call."],["UpdateServiceRequest","Request message for `Services.UpdateService`."],["UpdateVersionRequest","Request message for `Versions.UpdateVersion`."],["UrlDispatchRule","Rules to match an HTTP request and dispatch that request to a service."],["UrlMap","URL pattern and description of how the URL should be handled. App Engine can handle URLs by executing application code or by serving static files uploaded with the version, such as images, CSS, or JavaScript."],["Version","A Version resource is a specific set of source code and configuration files that are deployed into a service."],["ZipInfo",""]]});