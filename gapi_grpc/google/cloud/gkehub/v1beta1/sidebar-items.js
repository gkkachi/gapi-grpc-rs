initSidebarItems({"mod":[["gke_hub_membership_service_client","Generated client implementations."],["membership",""],["membership_state",""]],"struct":[["Authority","Authority encodes how Google will recognize identities from this Membership. A workload with a token from this oidc_issuer can call the IAM credentials API for the provided identity_namespace and identity_provider; the workload will receive a Google OAuth token that it can use for further API calls. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity"],["ConnectAgent","The information required from end users to use GKE Connect."],["ConnectAgentResource","ConnectAgentResource represents a Kubernetes resource manifest for connect agent deployment."],["CreateMembershipRequest","Request message for the `GkeHubMembershipService.CreateMembership` method."],["DeleteMembershipRequest","Request message for `GkeHubMembershipService.DeleteMembership` method."],["GenerateConnectManifestRequest","Request message for `GkeHubMembershipService.GenerateConnectManifest` method. Bes ure to follow the practice in go/gkeconnect_agent_manifest before making changes to the proto."],["GenerateConnectManifestResponse","Response message for `GkeHubService.GenerateConnectManifest` method."],["GenerateExclusivityManifestRequest","The request to generate the manifests for exclusivity artifacts."],["GenerateExclusivityManifestResponse","The response of the exclusivity artifacts manifests for the client to apply."],["GetMembershipRequest","Request message for `GkeHubMembershipService.GetMembership` method."],["GkeCluster","GkeCluster represents a k8s cluster on GKE."],["KubernetesMetadata","KubernetesMetadata provides informational metadata for Memberships that are created from Kubernetes Endpoints (currently, these are equivalent to Kubernetes clusters)."],["KubernetesResource","KubernetesResource contains the YAML manifests and configs for Kubernetes resources of the Membership in the cluster. Upon CreateMembership:"],["ListMembershipsRequest","Request message for `GkeHubMembershipService.ListMemberships` method."],["ListMembershipsResponse","Response message for the `GkeHubMembershipService.ListMemberships` method."],["Membership","Membership contains information about a member cluster."],["MembershipEndpoint","MembershipEndpoint contains the information to reach a member."],["MembershipState","State of the Membership resource."],["OperationMetadata","Represents the metadata of the long-running operation."],["ResourceManifest","ResourceManifest represents a Kubernetes resource to be applied to the cluster."],["ResourceOptions","ResourceOptions represents the supported options for generating the Kubernetes resources."],["TypeMeta","TypeMeta is the type information needed for content unmarshalling of the Kubernetes resources in the manifest."],["UpdateMembershipRequest","Request message for `GkeHubMembershipService.UpdateMembership` method."],["ValidateExclusivityRequest","The request to validate the existing state of the membership CR in the cluster."],["ValidateExclusivityResponse","The response of exclusivity artifacts validation result status."]]});