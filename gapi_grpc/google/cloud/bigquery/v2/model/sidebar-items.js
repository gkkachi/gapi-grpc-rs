initSidebarItems({"enum":[["DataSplitMethod","Indicates the method to split input data into multiple tables."],["DistanceType","Distance metric used to compute the distance between two points."],["LearnRateStrategy","Indicates the learning rate optimization strategy to use."],["LossType","Loss metric to evaluate model training performance."],["ModelType","Indicates the type of the Model."],["OptimizationStrategy","Indicates the optimization strategy used for training."]],"mod":[["binary_classification_metrics",""],["clustering_metrics",""],["evaluation_metrics",""],["kmeans_enums",""],["multi_class_classification_metrics",""],["training_run",""]],"struct":[["AggregateClassificationMetrics","Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows."],["BinaryClassificationMetrics","Evaluation metrics for binary classification/classifier models."],["ClusteringMetrics","Evaluation metrics for clustering models."],["EvaluationMetrics","Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models."],["KmeansEnums",""],["MultiClassClassificationMetrics","Evaluation metrics for multi-class classification/classifier models."],["RegressionMetrics","Evaluation metrics for regression and explicit feedback type matrix factorization models."],["TrainingRun","Information about a single training query run for the model."]]});